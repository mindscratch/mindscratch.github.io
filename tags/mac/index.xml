<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on craig wickesser</title>
    <link>http://craigwickesser.com/tags/mac/</link>
    <description>Recent content in Mac on craig wickesser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>codecraig@gmail.com (Craig Wickesser)</managingEditor>
    <webMaster>codecraig@gmail.com (Craig Wickesser)</webMaster>
    <lastBuildDate>Sun, 17 Apr 2016 20:30:55 -0400</lastBuildDate>
    <atom:link href="http://craigwickesser.com/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Run Mesos using Docker Beta on Mac OS X</title>
      <link>http://craigwickesser.com/2016/04/run-mesos-using-docker-beta-on-mac-osx/</link>
      <pubDate>Sun, 17 Apr 2016 20:30:55 -0400</pubDate>
      <author>codecraig@gmail.com (Craig Wickesser)</author>
      <guid>http://craigwickesser.com/2016/04/run-mesos-using-docker-beta-on-mac-osx/</guid>
      <description>

&lt;p&gt;Previously I &lt;a href=&#34;http://craigwickesser.com/2016/01/mesos-on-mac-osx/&#34;&gt;wrote about&lt;/a&gt; running &lt;a href=&#34;http://mesos.apache.org&#34;&gt;Apache Mesos&lt;/a&gt;
in Docker on Mac OS X. Back then Docker worked by using a VM run via VirtualBox. Today,
using Docker Beta for Mac, the process is simpler and more like the linux experience.&lt;/p&gt;

&lt;p&gt;The scripts I used before only had to be changed to update the way the &lt;code&gt;dockerIp&lt;/code&gt;
was discovered. I wasn&amp;rsquo;t sure how do find that IP address.&lt;/p&gt;

&lt;p&gt;With the Docker Beta there&amp;rsquo;s a command-line tool named &lt;code&gt;pinata&lt;/code&gt;
which can be used to configure docker:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;laptop:~ craig$ pinata list
These are advanced configuration settings to customise Docker.app on MacOSX.
You can set them via pinata set &amp;lt;key&amp;gt; &amp;lt;value&amp;gt; &amp;lt;options&amp;gt;.

üê≥  hostname = docker
   Hostname of the virtual machine endpoint, where container ports will be
   exposed if using nat networking. Access it via &#39;docker.local&#39;.

üê≥  hypervisor = native (memory=2, ncpu=4)
   The Docker.app includes embedded hypervisors that run the virtual machines
   that power the containers. This setting allows you to control which the
   default one used for Linux is.

 ‚ñ∏  native: a version of the xhyve hypervisor that uses the MacOSX
              Hypervisor.framework to run container VMs. Parameters:
              memory (VM memory in gigabytes), ncpu (vCPUs)


üê≥  network = nat (external-bind=false)
   Controls how local containers can access the external network via the
   MacOS X host. This includes outbound traffic as well as publishing ports
   for external access to the local containers.

 ‚ñ∏     nat: a mode that uses the MacOS X vmnet.framework to route container
              traffic to the host network via a NAT. Parameters:
              external-bind (bind ports to external network interface)
 ‚ñ∏ hostnet: a mode that helps if you are using a VPN that restricts
              connectivity. Activating this mode will proxy container network
              packets via the Docker.app process as host socket traffic.
              Parameters: docker-ipv4 (docker node), host-ipv4 (host node)

üê≥  filesystem = osxfs
   Controls the mode by which files from the MacOS X host and the container
   filesystem are shared with each other.

 ‚ñ∏   osxfs: a FUSE-based filesystem that bidirectionally forwards OSX
              filesystem events into the container.


üê≥  daemon = run &#39;pinata get daemon&#39; or &#39;pinata set daemon [@file|-]&amp;gt;
   JSON configuration of the local Docker daemon. Configure any custom
   options you need as documented in:
   https://docs.docker.com/engine/reference/commandline/daemon/. Set it
   directly, or a @file or - for stdin.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;hostname&lt;/code&gt; property says you can access the virtual machine endpoint through
&lt;code&gt;docker.local&lt;/code&gt;. I tried to ping that hostname and received &amp;ldquo;request timed out&amp;rdquo;. From what I render
in the forums, I should&amp;rsquo;ve gotten a response. I rebooted my Mac and tried the ping again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;laptop:~ craig$ ping docker.local
PING docker.local (192.168.64.4): 56 data bytes
64 bytes from 192.168.64.4: icmp_seq=0 ttl=64 time=0.361 ms
64 bytes from 192.168.64.4: icmp_seq=1 ttl=64 time=0.382 ms
^C
--- docker.local ping statistics ---
2 packets transmitted, 2 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 0.361/0.371/0.382/0.010 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It worked! Here&amp;rsquo;s the updated scripts I used to start a Mesos master and slave
using Docker Beta for Mac:&lt;/p&gt;

&lt;h2 id=&#34;start-mesos-master:53ae553c4baed7c54e57f316d653c62a&#34;&gt;Start Mesos master&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# there must be a simpler way...
dockerIp=$(ping -c 1 docker.local  | grep &amp;quot;^PING docker.local&amp;quot; | gawk &#39;{print $3}&#39; | tr -d &#39;(&#39; | tr -d &#39;)&#39; | tr -d &#39;:&#39;)
hostIp=$(ipconfig getifaddr en0)

docker run \
-e MESOS_HOSTNAME=$dockerIp \
-e MESOS_IP=$dockerIp \
-e MESOS_QUORUM=1 \
-e MESOS_ZK=zk://$hostIp:2181/mesos \
--name mesos-master \
--net host \
--restart always \
mesosphere/mesos-master:0.28.0-2.0.16.ubuntu1404
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;start-mesos-slave:53ae553c4baed7c54e57f316d653c62a&#34;&gt;Start Mesos slave&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# there must be a simpler way...
dockerIp=$(ping -c 1 docker.local  | grep &amp;quot;^PING docker.local&amp;quot; | gawk &#39;{print $3}&#39; | tr -d &#39;(&#39; | tr -d &#39;)&#39; | tr -d &#39;:&#39;)
hostIp=$(ipconfig getifaddr en0)

docker run \
-e MESOS_HOSTNAME=$dockerIp \
-e MESOS_IP=$dockerIp \
-e MESOS_MASTER=zk://$hostIp:2181/mesos \
-v /sys/fs/cgroup:/sys/fs/cgroup \
-v /var/run/docker.sock:/var/run/docker.sock \
--name slave --net host --privileged --restart always \
mesosphere/mesos-slave:0.28.0-2.0.16.ubuntu1404
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Secure Email on Mac OS X</title>
      <link>http://craigwickesser.com/2016/01/secure-email-on-mac/</link>
      <pubDate>Mon, 18 Jan 2016 20:06:53 -0500</pubDate>
      <author>codecraig@gmail.com (Craig Wickesser)</author>
      <guid>http://craigwickesser.com/2016/01/secure-email-on-mac/</guid>
      <description>&lt;p&gt;This will be quick. I use GMail but it lacks the native ability to sign and
encrypt email. I did some looking around for desktop email clients for Mac OS X
that support &lt;a href=&#34;https://en.wikipedia.org/wiki/S/MIME&#34;&gt;S/MIME&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I ended up going with &lt;a href=&#34;http://airmailapp.com/&#34;&gt;Airmail 2&lt;/a&gt; because it has S/MIME
support and it supports &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; which I like to use.&lt;/p&gt;

&lt;p&gt;S/MIME support is provided by a &lt;a href=&#34;http://airmailapp.com/smime&#34;&gt;plugin&lt;/a&gt;. Follow
the instructions after going to the link, you&amp;rsquo;ll ultimately download a zip file.&lt;/p&gt;

&lt;p&gt;Open Airmail, click on the &lt;code&gt;Window&lt;/code&gt; menu and select &lt;code&gt;Show Plugins Folder...&lt;/code&gt;.
Extract the S/MIME plugin zip file and copy the &lt;code&gt;.bundle&lt;/code&gt; file into the plugins
folder.&lt;/p&gt;

&lt;p&gt;Click on the &lt;code&gt;Window&lt;/code&gt; menu and choose &lt;code&gt;Plugins&lt;/code&gt; and click &lt;code&gt;Reload Plugins&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should be all set to send signed and encrypted email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: Comodo offers a &lt;a href=&#34;https://www.comodo.com/home/email-security/free-email-certificate.php&#34;&gt;free email certificate&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mesos on Mac OS X</title>
      <link>http://craigwickesser.com/2016/01/mesos-on-mac-osx/</link>
      <pubDate>Sat, 09 Jan 2016 12:14:56 -0500</pubDate>
      <author>codecraig@gmail.com (Craig Wickesser)</author>
      <guid>http://craigwickesser.com/2016/01/mesos-on-mac-osx/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;updated on 04/01/2016 to use mesosphere docker images&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using docker it&amp;rsquo;s simple to get a &lt;a href=&#34;mesos.apache.org&#34;&gt;Mesos&lt;/a&gt; cluster running on Mac OS X. I&amp;rsquo;m running Docker 1.9.1
and OS X 10.11.2. We&amp;rsquo;ll be running Zookeeper 3.4.7 and Mesos 0.24.1 (that&amp;rsquo;s the version provided by the docker image I&amp;rsquo;m using for this example).&lt;/p&gt;

&lt;p&gt;First we&amp;rsquo;ll start a Zookeeper server, then a Mesos master and
a single Mesos slave.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: I have satellite internet, so my downloads are throttled after I use the data allowance for the month. I was able to pull a Docker images for Mesos but I kept having issues pulling the Zookeeper so I just downloaded Zookeeper from their &lt;a href=&#34;zookeeper.apache.org&#34;&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;zookeeper:fbd5e7fec7c8e618d5a6c691dfb3fbe5&#34;&gt;Zookeeper&lt;/h2&gt;

&lt;p&gt;After downloading the zookeeper tarball, extract it. Copy the sample configuration file, &lt;code&gt;cp /path/to/zookeeper-3.4.7/conf/zoo_sample.cfg /path/to/zookeeper-3.4.7/zoo.cfg&lt;/code&gt;. For now, the default configuration is good enough.&lt;/p&gt;

&lt;p&gt;Start the server: &lt;code&gt;/path/to/zookeeper-3.4.7/bin/zkServer.sh&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-mesos-master:fbd5e7fec7c8e618d5a6c691dfb3fbe5&#34;&gt;Start Mesos master&lt;/h2&gt;

&lt;p&gt;On the Mac, Docker is run in a VM, so we have to do some finagling to get the correect IP address for Mesos to use. To start the Mesos master I created a small script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

dockerIp=$(echo $DOCKER_HOST | cut -d &#39;/&#39; -f 3 | cut -d &#39;:&#39; -f 1)
hostIp=$(ipconfig getifaddr en0)

docker run \
-e MESOS_HOSTNAME=$dockerIp \
-e MESOS_IP=$dockerIp \
-e MESOS_QUORUM=1 \
-e MESOS_ZK=zk://$hostIp:2181/mesos \
--name mesos-master \
--net host \
--restart always \
mesosphere/mesos-master:0.28.0-2.0.16.ubuntu1404
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;note&lt;/em&gt;: You could optionally pass the &lt;code&gt;-d&lt;/code&gt; flag so the container would run in the background.&lt;/p&gt;

&lt;h2 id=&#34;start-mesos-slave:fbd5e7fec7c8e618d5a6c691dfb3fbe5&#34;&gt;Start Mesos slave&lt;/h2&gt;

&lt;p&gt;I also used a script to start the Mesos slave:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

dockerIp=$(echo $DOCKER_HOST | cut -d &#39;/&#39; -f 3 | cut -d &#39;:&#39; -f 1)
hostIp=$(ipconfig getifaddr en0)

docker run \
-e MESOS_HOSTNAME=$dockerIp \
-e MESOS_IP=$dockerIp \
-e MESOS_MASTER=zk://$hostIp:2181/mesos \
-v /sys/fs/cgroup:/sys/fs/cgroup \
-v /var/run/docker.sock:/var/run/docker.sock \
--name slave --net host --privileged --restart always \
mesosphere/mesos-slave:0.28.0-2.0.16.ubuntu1404
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can now browse to the Mesos UI. You&amp;rsquo;ll need to get the IP address of the VM running docker:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-3.2$ echo $DOCKER_HOST
tcp://192.168.99.100:2376
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this case, browse to &lt;code&gt;http://192.168.99.100:5050&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>